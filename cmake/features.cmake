include(CheckIncludeFile)
include(CheckFunctionExists)
include(CheckLibraryExists)
include(CheckSymbolExists)
include(CheckStructHasMember)
# check libraries and tools
macro(target_exists target var)
  if(TARGET ${target})
    set(${var} 1)
  else()
    set(${var} 0)
  endif()
endmacro()

check_include_file(sys/inotify.h HAVE_SYS_INOTIFY_H)
check_function_exists(inotify_init HAVE_INOTIFY_INIT)
if(HAVE_SYS_INOTIFY_H AND HAVE_INOTIFY_INIT)
    set(HAVE_INOTIFY ON)
endif()
check_include_file(sys/file.h HAVE_SYS_FILE_H)
check_include_file(sys/inotify.h HAVE_SYS_IOCTL_H)
check_include_file(sys/ndir.h HAVE_SYS_NDIR_H)
check_include_file(sys/param.h HAVE_SYS_PARAM_H)
check_include_file(sys/queue.h HAVE_SYS_QUEUE_H)
check_include_file(sys/socket.h HAVE_SYS_SOCKET_H)
check_include_file(sys/stat.h HAVE_SYS_STAT_H)
check_include_file(sys/syscall.h HAVE_SYS_SYSCALL_H)
check_include_file(sys/time.h HAVE_SYS_TIME_H)
check_include_file(sys/types.h HAVE_SYS_TYPES_H)
check_include_file(sys/unistd.h HAVE_UNISTD_H)
check_include_file(sys/vfork.h HAVE_VFORK_H)
check_include_file(inttypes.h HAVE_INTTYPES_H)
check_include_file(arpa/inet.h HAVE_ARPA_INET_H)
check_include_file(asm/unistd.h HAVE_ASM_UNISTD_H)
check_include_file(avahi-common/thread-watch.h HAVE_AVAHI_COMMON_THREAD_WATCH_H)
check_include_file(wchar.h HAVE_WCHAR_H)
check_include_file(dirent.h HAVE_DIRENT_H)
check_include_file(endian.h HAVE_ENDIAN_H)
check_include_file(fcntl.h HAVE_FCNTL_H)
check_include_file(libintl.h HAVE_LIBINTL_H)
check_include_file(locale.h HAVE_LOCALE_H)
check_include_file(machine/endian.h HAVE_MACHINE_ENDIAN_H)
check_include_file(mach/mach_time.h HAVE_MACH_MACH_TIME_H)
check_include_file(minix/config.h HAVE_MINIX_CONFIG_H)
check_include_file(ndir.h HAVE_NDIR_H)
check_include_file(netdb.h HAVE_NETDB_H)
check_include_file(netinet/in.h HAVE_NETINET_IN_H)
check_include_file(linux/netlink.h HAVE_NETLINK)
check_include_file(poll.h HAVE_POLL_H)
check_include_file(stddef.h HAVE_STDDEF_H)
check_include_file(stdint.h HAVE_STDINT_H)
check_include_file(stdio.h HAVE_STDIO_H)
check_include_file(stdlib.h HAVE_STDLIB_H)
check_include_file(strings.h HAVE_STRINGS_H)
check_include_file(string.h HAVE_STRING_H)
check_include_file(syscall.h HAVE_SYSCALL_H)
check_include_file(vfork.h HAVE_VFORK_H)
check_include_file(stdbool.h HAVE_STDBOOL_H)

check_library_exists(rt clock_gettime "" HAVE_CLOCK_GETTIME)
check_library_exists(pthread pthread_create "" HAVE_LIBPTHREAD)

check_function_exists(mkdir HAVE_MKDIR)
check_function_exists(gethostname HAVE_GETHOSTNAME)
check_function_exists(getifaddrs HAVE_GETIFADDRS)
check_function_exists(gettext HAVE_GETTEXT)
check_function_exists(gettimeofday HAVE_GETTIMEOFDAY)
check_function_exists(inet_ntoa HAVE_INET_NTOA)
check_function_exists(iconv HAVE_ICONV)
check_function_exists(kqueue HAVE_KQUEUE)
check_function_exists(memmove HAVE_MEMMOVE)
check_function_exists(memset HAVE_MEMSET)
check_function_exists(mkdir HAVE_MKDIR)
check_function_exists(realpath HAVE_REALPATH)
check_function_exists(select HAVE_SELECT)
check_function_exists(sendfile HAVE_SENDFILE)
check_function_exists(setlocale HAVE_SETLOCALE)
check_function_exists(socket HAVE_SOCKET)
check_function_exists(strcasecmp HAVE_STRCASECMP)
check_function_exists(strchr HAVE_STRCHR)
check_function_exists(strdup HAVE_STRDUP)
check_function_exists(strerror HAVE_STRERROR)
check_function_exists(strncasecmp HAVE_STRNCASECMP)
check_function_exists(strpbrk HAVE_STRPBRK)
check_function_exists(strrchr HAVE_STRRCHR)
check_function_exists(strstr HAVE_STRSTR)
check_function_exists(strtol HAVE_STRTOL)
check_function_exists(strtoul HAVE_STRTOUL)
check_function_exists(fork HAVE_FORK)
check_function_exists(vfork HAVE_VFORK)
check_function_exists(gettext HAVE_GETTEXT)

check_struct_has_member("struct dirent" d_type dirent.h HAVE_STRUCT_DIRENT_D_TYPE LANGUAGE C)
check_struct_has_member("struct stat" st_blocks sys/stat.h HAVE_STRUCT_STAT_ST_BLOCKS LANGUAGE C)

set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)
check_symbol_exists(SEEK_HOLE "unistd.h" HAVE_DECL_SEEK_HOLE)

find_package(PkgConfig REQUIRED)
find_package(JPEG REQUIRED)
target_exists(JPEG::JPEG HAVE_JPEGLIB_H)

find_package(SQLite3 REQUIRED)
check_include_file(sqlite3.h HAVE_SQLITE3_H)

set(CMAKE_REQUIRED_INCLUDES ${SQLite3_INCLUDE_DIRS})
set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARIES})
check_symbol_exists(sqlite3_malloc sqlite3.h HAVE_SQLITE3_MALLOC)
check_symbol_exists(sqlite3_prepare_v2 sqlite3.h HAVE_SQLITE3_PREPARE_V2)
set(CMAKE_REQUIRED_INCLUDES)
set(CMAKE_REQUIRED_LIBRARIES)

try_compile(HAVE_STRUCT_IP_MREQN ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_mreqn.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2)
if(NOT ${HAVE_STRUCT_IP_MREQN})
  try_compile(HAVE_STRUCT_IP_MREQ ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_mreq.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2)
endif()
try_compile(HAVE_LINUX_SENDFILE_API ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_linux_sendfile.c)
try_compile(SCANDIR_CONST ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_scandir_const.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror)

try_compile(HAVE_DIRENT_H ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_dirent_DIR.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror COMPILE_DEFINITIONS -DIS_DIRENT)
if(NOT HAVE_DIRENT_H)
  try_compile(HAVE_SYS_NDIR_H ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_dirent_DIR.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror COMPILE_DEFINITIONS -DIS_SYS_NDIR)
endif()
if(NOT (HAVE_DIRENT_H OR HAVE_SYS_NDIR_H))
  try_compile(HAVE_SYS_DIR_H ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_dirent_DIR.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror COMPILE_DEFINITIONS -DIS_SYS_DIR)
endif()
if(NOT (HAVE_DIRENT_H OR HAVE_SYS_NDIR_H OR HAVE_SYS_DIR_H))
  try_compile(HAVE_NDIR_H ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_dirent_DIR.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror COMPILE_DEFINITIONS -DIS_NDIR)
endif()

try_compile(USE_DAEMON ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/tests/test_daemon.c CMAKE_FLAGS -DCOMPILE_DEFINITIONS=-c -g -O2 -Wall -Werror)

pkg_check_modules(ID3TAG id3tag REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::ID3TAG HAVE_ID3TAG_H)

pkg_check_modules(LIBEXIF libexif REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::LIBEXIF HAVE_LIBEXIF_EXIF_LOADER_H)

pkg_check_modules(LIBOGG ogg REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::LIBOGG HAVE_OGG_OGG_H)

pkg_check_modules(LIBOPUS opus opusfile IMPORTED_TARGET)
target_exists(PkgConfig::LIBOPUS HAVE_OPUS)
if(NOT ${HAVE_OPUS})
    pkg_check_modules(LIBOPUS opusfile REQUIRED IMPORTED_TARGET)
    target_exists(PkgConfig::LIBOPUS HAVE_OPUS)
endif()

pkg_check_modules(LIBAV libavcodec libavformat libavutil libavdevice REQUIRED IMPORTED_TARGET)

set(CMAKE_REQUIRED_INCLUDES ${LIBAV_INCLUDE_DIRS})
check_include_file(avcodec.h HAVE_AVCODEC_H)
check_include_file(avformat.h HAVE_AVFORMAT_H)
check_include_file(avutil.h HAVE_AVUTIL_H)
check_include_file(ffmpeg/avcodec.h HAVE_FFMPEG_AVCODEC_H)
check_include_file(ffmpeg/avformat.h HAVE_FFMPEG_AVFORMAT_H)
check_include_file(ffmpeg/avutil.h HAVE_FFMPEG_AVUTIL_H)
check_include_file(ffmpeg/libavcodec/avcodec.h HAVE_FFMPEG_LIBAVCODEC_AVCODEC_H)
check_include_file(ffmpeg/libavformat/avformat.h HAVE_FFMPEG_LIBAVFORMAT_AVFORMAT_H)
check_include_file(ffmpeg/libavutil/avutil.h HAVE_FFMPEG_LIBAVUTIL_AVUTIL_H)
check_include_file(libavcodec/avcodec.h HAVE_LIBAVCODEC_AVCODEC_H)
check_include_file(libavformat/avformat.h HAVE_LIBAVFORMAT_AVFORMAT_H)
check_include_file(libavutil/avutil.h HAVE_LIBAVUTIL_AVUTIL_H)
check_include_file(libav/avcodec.h HAVE_LIBAV_AVCODEC_H)
check_include_file(libav/avformat.h HAVE_LIBAV_AVFORMAT_H)
check_include_file(libav/avutil.h HAVE_LIBAV_AVUTIL_H)
check_include_file(libav/libavcodec/avcodec.h HAVE_LIBAV_LIBAVCODEC_AVCODEC_H)
check_include_file(libav/libavformat/avformat.h HAVE_LIBAV_LIBAVFORMAT_AVFORMAT_H)
check_include_file(libav/libavutil/avutil.h HAVE_LIBAV_LIBAVUTIL_AVUTIL_H)
set(CMAKE_REQUIRED_INCLUDES)

pkg_check_modules(VORBISFILE vorbisfile REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::VORBISFILE HAVE_VORBISFILE)

pkg_check_modules(VORBIS vorbis REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::VORBIS HAVE_VORBIS)

pkg_check_modules(VORBISENC vorbisenc REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::VORBISENC HAVE_VORBISENC)
target_exists(PkgConfig::VORBISENC HAVE_VORBIS_CODEC_H)
target_exists(PkgConfig::VORBISENC HAVE_VORBIS_VORBISFILE_H)

pkg_check_modules(FLAC flac REQUIRED IMPORTED_TARGET)
target_exists(PkgConfig::FLAC HAVE_FLAC)
set(HAVE_FLAC_ALL_H ${FLAC_FOUND})
set(HAVE_FLAC_METADATA_H ${FLAC_FOUND})

if(TIVO_SUPPORT)
  pkg_check_modules(AVAHI avahi-client IMPORTED_TARGET)
  target_exists(PkgConfig::AVAHI HAVE_AVAHI)
endif()

if(ENABLE_NLS)
    check_library_exists(intl libintl_gettext "" HAVE_LIBINTL)
    if(HAVE_LIBINTL)
        set(LIBINTL_LIBRARY intl)
    endif()
endif()